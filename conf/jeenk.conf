### required parameters

# bcl_input_dir = hdfs:///path/to/illumina/dir/
# cram_output_dir = file:///path/to/output/cram-dir/
# reference = /tmp/ref/some.fasta    # note: must be local to each node
# flink_tmp_dir = file:///tmp/flink-state-backend

### recommended parameters, with defaults

# num_nodes = flinks total taskmanagers
# cores_per_node = flink total slots / flinks total taskmanagers
# mem_per_node = 12000

### other parameters, with defaults

## general
# par1 = min(mem_per_node/8000, cores_per_node)
# par2 = min(mem_per_node/12000, cores_per_node)
# kafka_server = 127.0.0.1:9092
# kafka_prq = flink-prq
# kafka_aligned = flink-aligned
# flink_server = "localhost:8081"

## reader
# num_readers = num_nodes
# reader_flinkpar = 1
# reader_grouping = par1
# reader_kafka_fanout = 1
# sample_sheet = bcl_input_dir + SampleSheet.csv
# adapter = ""
# mismatches = 1
# undet = "Undetermined"
# base_dir = "Data/Intensities/BaseCalls/"
# block_size = 2048

## aligner
# numAligners = num_nodes
# aligner_flinkpar = 1
# aligner_grouping = 3
# aligner_timeout = 0
# rapi_par = cores_per_node / aligner_flinkpar
# rapi_win = 3360
# aligner_kafka_fanin = 1
# aligner_kafka_fanout = num_nodes * par2 / min(4, num_nodes * par2 / cores_per_node)

## writer
# numWriters = min(4, num_nodes)
# writer_flinkpar = aligner_kafka_fanout    # note: writer_flinkpar <= aligner_kafka_fanout
# writer_grouping = 4
# writer_timeout = 0
# writer_kafka_fanin = writer_flinkpar





